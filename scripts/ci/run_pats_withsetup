#!/bin/bash
# vim: set ft=sh

set -e -x

root_path=./$(dirname $0)/../../..
scripts_path=./$(dirname $0)/..
eval $($scripts_path/get_paths.sh)

if [ "$(uname)" == "Darwin" ]; then
    export GOPATH=`greadlink -f ${scripts_path}/..`
else
    export GOPATH=`readlink -f ${scripts_path}/..`
fi
export PATH=$GOPATH/bin:$PATH

absolute_path() {
  (cd $1 && pwd)
}

base_path=$(absolute_path `dirname $0`)

source ${scripts_path}/ci/utils.sh
check_param CF_USERNAME
check_param CF_API_ENDPOINT
check_param APPS_DOMAIN
check_param APPLICATION_PATH
check_param SERVICE_NAME
check_param PLAN_NAME
check_param BROKER_URL
check_param BROKER_USER
check_param SMB_REMOTE_PATH
check_param SMB_USERNAME
check_param SMB_PASSWORD
check_param TEST_MULTI_CELL
check_param TEST_MOUNT_OPTIONS
check_param TEST_WINDOWS_CELL

if [ -z "$APPLICATION_PATH" ]; then
    echo "APPLICATION_PATH cannot be blank"
    exit 1
fi

# CF_PASSWORD and BROKER_PASSWORD are retrieved from credhub
${root_path}/persi-ci/scripts/ci/bbl_get_bosh_env
source bosh-env/set-env.sh

bosh_manifest_password_variable_name=cf_admin_password
CF_PASSWORD=`credhub find -j -n ${bosh_manifest_password_variable_name} | jq -r .credentials[].name | xargs credhub get -j -n | jq -r .value`


bosh_manifest_password_variable_name=$BROKER_PASSWORD_KEY
BROKER_PASSWORD=`credhub find -j -n ${bosh_manifest_password_variable_name} | jq -r .credentials[].name | xargs credhub get -j -n | jq -r .value`

go get github.com/onsi/ginkgo/ginkgo

export TEST_WINDOWS_CELL=${TEST_WINDOWS_CELL}

export CREATE_CONFIG=/tmp/create_config.json 
export BIND_CONFIG=/tmp/bind_config.json 

echo "{\"share\":\"$SMB_REMOTE_PATH\"}" > ${CREATE_CONFIG}
echo "{\"username\":\"$SMB_USERNAME\",\"password\":\"$SMB_PASSWORD\"}" > ${BIND_CONFIG}

${scripts_path}/run-pats \
  ${CF_USERNAME} \
  ${CF_PASSWORD} \
  ${CF_API_ENDPOINT} \
  ${APPS_DOMAIN} \
  ${SERVICE_NAME} \
  ${PLAN_NAME} \
  ${BROKER_URL} \
  ${BROKER_USER} \
  ${BROKER_PASSWORD} \
  ${CREATE_CONFIG} \
  ${BIND_CONFIG}
